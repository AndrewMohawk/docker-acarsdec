#!/command/with-contenv bash
#shellcheck shell=bash

SCRIPT_NAME="$(basename "$0")"
SCRIPT_NAME="${SCRIPT_NAME%.*}"

# shellcheck disable=SC2034
s6wrap=(s6wrap --quiet --timestamps --prepend="$SCRIPT_NAME" --args)

set -o pipefail

# Require that acars_server is running
if ! netstat -an | grep -P '^\s*tcp\s+\d+\s+\d+\s+0\.0\.0\.0:15550\s+(?>\d{1,3}\.{0,1}){4}:\*\s+LISTEN\s*$' > /dev/null; then
  sleep 1
  if [[ ! ${QUIET_LOGS,,} =~ true ]]; then
    # shellcheck disable=SC2154
    "${s6wrap[@]}" echo "acars_server not running, exiting"
  fi
  exit
fi

# Start our stats loop
while true; do

  # capture 5 mins of flows
  timeout --foreground 300s socat -u TCP:127.0.0.1:15550 CREATE:/run/acars/acars.past5min.json

  # if the port isn't reachable, this file isn't created, either container is shutting down or acars_server isn't reachable
  # in both cases let's exit, if this should still be running it will be restarted
  if ! [[ -f /run/acars/acars.past5min.json ]]; then
    exit
  fi

  # shellcheck disable=SC2016
  "${s6wrap[@]}" echo "$(wc -l < /run/acars/acars.past5min.json) ACARS messages received in last 5 mins"

  # rotate files keeping last 2 hours
  for i in {24..1}; do
    mv "/run/acars/acars.$((i-1)).json" "/run/acars/acars.$i.json" > /dev/null 2>&1 || true
  done
  mv "/run/acars/acars.past5min.json" "/run/acars/acars.0.json" > /dev/null 2>&1 || true

done

sleep 5
